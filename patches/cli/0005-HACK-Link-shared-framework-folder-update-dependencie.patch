From 0851a1411340680ab894b87fd150f622c5054be7 Mon Sep 17 00:00:00 2001
From: Matt Ellis <matell@microsoft.com>
Date: Wed, 24 May 2017 17:29:09 -0700
Subject: [PATCH] HACK: Link shared framework folder update-dependencies
 expects

The right way to do this is to make the Microsoft.NETCore.App that the
application depends on overridable, so we can ensure we always
reference the same Microsoft.NETCore.App that's in the toolset we're
building with.

The other option would be to just publish this thing standalone
again (and it could pick up the Microsoft.NETCore.App that we just
built).

This unblocks things, however.
---
 build_projects/update-dependencies/update-dependencies.sh | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/build_projects/update-dependencies/update-dependencies.sh b/build_projects/update-dependencies/update-dependencies.sh
index 8a0d7f9..f1b8c8f 100755
--- a/build_projects/update-dependencies/update-dependencies.sh
+++ b/build_projects/update-dependencies/update-dependencies.sh
@@ -36,6 +36,8 @@ fi
 
 cp -r $DOTNET_TOOL_DIR/* $DOTNET_INSTALL_DIR/
 
+ln -s $DOTNET_INSTALL_DIR/shared/Microsoft.NETCore.App/2.0.0-preview1-002111-00 $DOTNET_INSTALL_DIR/shared/Microsoft.NETCore.App/2.0.0-preview2-002066-00
+
 # Put the stage 0 on the path
 export PATH=$DOTNET_INSTALL_DIR:$PATH
 
-- 
1.8.3.1

