From d5cece6f9797f1578ab4667154b8d5a922dc036f Mon Sep 17 00:00:00 2001
From: Matt Ellis <matell@microsoft.com>
Date: Thu, 11 May 2017 17:58:28 -0700
Subject: [PATCH] Provide a way to not include the SDK Resolver

When building the entire stack for a non windows target, the windows
resolver packages will not be present (and in the case of a windows
build, you'd only have one architecture anyway). Provide a way to opt
out of including the resolver. It's only interesting for Visual
Studio insertion cases, which is something the community at large
doesn't need to worry about.
---
 build/BuildDefaults.props | 1 +
 build/Compile.targets     | 5 +++--
 build/Prepare.targets     | 3 ++-
 3 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/build/BuildDefaults.props b/build/BuildDefaults.props
index 268a02e..a4d56ba 100644
--- a/build/BuildDefaults.props
+++ b/build/BuildDefaults.props
@@ -5,6 +5,7 @@
     <IncludeNuGetPackageArchive Condition=" '$(IncludeNuGetPackageArchive)' == '' ">true</IncludeNuGetPackageArchive>
     <SkipBuildingInstallers Condition=" '$(SkipBuildingInstallers)' == '' ">false</SkipBuildingInstallers>
     <IncludeAspNetCoreRuntime Condition="'$(IncludeAspNetCoreRuntime)' == ''">true</IncludeAspNetCoreRuntime>
+    <IncludeMSBuildSdkResolver Condition="'$(IncludeMSBuildSdkResolver)' == ''">true</IncludeMSBuildSdkResolver>
     <UsePortableLinuxSharedFramework Condition=" '$(UsePortableLinuxSharedFramework)' == '' AND '$(OSPlatform)' == 'linux' ">true</UsePortableLinuxSharedFramework>
     <IncludeSharedFrameworksForBackwardsCompatibilityTests Condition=" $(IncludeSharedFrameworksForBackwardsCompatibilityTests) == '' AND '$(Rid)' != 'linux-x64' ">true</IncludeSharedFrameworksForBackwardsCompatibilityTests>
     <HighEntropyVA>true</HighEntropyVA>
diff --git a/build/Compile.targets b/build/Compile.targets
index d2a3747..044c103 100644
--- a/build/Compile.targets
+++ b/build/Compile.targets
@@ -14,11 +14,12 @@
              Targets="Publish" />
 
     <!-- Build MSBuildSdkResolver for all target frameworks (so we can build and test it x-plat) -->
-    <MSBuild Projects="$(SrcDirectory)/Microsoft.DotNet.MSBuildSdkResolver/Microsoft.DotNet.MSBuildSdkResolver.csproj" />
+    <MSBuild Projects="$(SrcDirectory)/Microsoft.DotNet.MSBuildSdkResolver/Microsoft.DotNet.MSBuildSdkResolver.csproj"
+             Condition="'$(IncludeMSBuildSdkResolver)' != 'false'" />
 
     <!-- Publish MSBuildSdkResolver for net46 (to prepare it for the VS insertion nupkg packaging) -->
     <MSBuild Projects="$(SrcDirectory)/Microsoft.DotNet.MSBuildSdkResolver/Microsoft.DotNet.MSBuildSdkResolver.csproj"
-             Condition="'$(OS)' == 'Windows_NT'"
+             Condition="'$(IncludeMSBuildSdkResolver)' == 'true' and '$(OS)' == 'Windows_NT'"
              Properties="TargetFramework=net46"
              Targets="Publish" />
   </Target>
diff --git a/build/Prepare.targets b/build/Prepare.targets
index 214b1f7..5bd0724 100644
--- a/build/Prepare.targets
+++ b/build/Prepare.targets
@@ -68,7 +68,8 @@
 
   <Target Name="SetupRestoreSrcPackagesInputsOutputs">
     <ItemGroup>
-      <RestoreSrcPackagesInput Include="$(RepoRoot)/src/**/*.csproj" Exclude="$(RepoRoot)/src/**/%24projectName%24.csproj"/>
+      <RestoreSrcPackagesInput Include="$(RepoRoot)/src/**/*.csproj" Exclude="$(RepoRoot)/src/**/%24projectName%24.csproj" />
+      <RestoreSrcPackagesInput Remove="$(RepoRoot)/src/Microsoft.DotNet.MSBuildSdkResolver/Microsoft.DotNet.MSBuildSdkResolver.csproj" Condition="'$(IncludeMSBuildSdkResolver)' == 'false'" />
     </ItemGroup>
   </Target>
 
-- 
1.8.3.1

