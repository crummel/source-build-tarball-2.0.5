<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="fsiUnexpectedThreadAbortException" xml:space="preserve">
    <value>- ThreadAbortException inesperado (Ctrl-C) durante el control de eventos: intentando reiniciar...</value>
  </data>
  <data name="fsiProductNameCommunity" xml:space="preserve">
    <value>F# Interactive para F# {0}</value>
  </data>
  <data name="fsiDidAHashrWithLockWarning" xml:space="preserve">
    <value>--&gt; '{0}' al que se hace referencia (el archivo puede estar bloqueado por un proceso de F# interactivo)</value>
  </data>
  <data name="fsiTimeInfoMainString" xml:space="preserve">
    <value>Real: {0}, CPU: {1}, GC: {2}</value>
  </data>
  <data name="fsiReadline" xml:space="preserve">
    <value>Admitir finalización con TAB en la consola (activada de forma predeterminada)</value>
  </data>
  <data name="fsiIntroTextHashloadInfo" xml:space="preserve">
    <value>Cargar los archivos proporcionados como si estuvieran compilados y referenciados</value>
  </data>
  <data name="fsiFailedToResolveAssembly" xml:space="preserve">
    <value>No se pudo resolver el ensamblado '{0}'.</value>
  </data>
  <data name="fsiIntroTextHeader2commandLine" xml:space="preserve">
    <value>  Opciones de la línea de comandos de F# interactivo:</value>
  </data>
  <data name="fsiIntroTextHashquitInfo" xml:space="preserve">
    <value>Salir</value>
  </data>
  <data name="fsiRemaining" xml:space="preserve">
    <value>Tratar los demás argumentos como argumentos de la línea de comandos, a los que se obtiene acceso con fsi.CommandLineArgs</value>
  </data>
  <data name="fsiEmitDebugInfoInQuotations" xml:space="preserve">
    <value>Emitir información de depuración en expresiones de código delimitadas</value>
  </data>
  <data name="fsiAbortingMainThread" xml:space="preserve">
    <value>- Anulando subproceso principal...</value>
  </data>
  <data name="fsiAdvanced" xml:space="preserve">
    <value>- AVANZADAS -</value>
  </data>
  <data name="fsiIntroTextHashrInfo" xml:space="preserve">
    <value>Hacer referencia (cargada dinámicamente) al archivo DLL proporcionado</value>
  </data>
  <data name="fsiDidAHashI" xml:space="preserve">
    <value>--&gt; Se agregó '{0}' a la ruta de acceso de inclusión de biblioteca</value>
  </data>
  <data name="fsiDidAHashr" xml:space="preserve">
    <value>--&gt; '{0}' referenciado</value>
  </data>
  <data name="fsiIntroTextHashtimeInfo" xml:space="preserve">
    <value>Activar o desactivar el control de tiempo</value>
  </data>
  <data name="fsiIntroTextHashIInfo" xml:space="preserve">
    <value>Agregar la ruta de acceso de búsqueda proporcionada para archivos DLL a los que se hace referencia</value>
  </data>
  <data name="fsiIntroTextHeader1directives" xml:space="preserve">
    <value>  Directivas de F#:</value>
  </data>
  <data name="fsiLoadingFilesPrefixText" xml:space="preserve">
    <value>Cargando</value>
  </data>
  <data name="stoppedDueToError" xml:space="preserve">
    <value>Detenido debido a un error.\n</value>
  </data>
  <data name="fsiInterrupt" xml:space="preserve">
    <value>\n- Interrumpir\n</value>
  </data>
  <data name="fsiInvalidAssembly" xml:space="preserve">
    <value>'{0}' no es un nombre de ensamblado válido.</value>
  </data>
  <data name="fsiExceptionDuringPrettyPrinting" xml:space="preserve">
    <value>\n\nSe generó una excepción durante la impresión con sangría.\nComuníquelo para poder corregirlo.\nSeguimiento: {0}\n</value>
  </data>
  <data name="fsiTurnedTimingOff" xml:space="preserve">
    <value>--&gt; Control de tiempo desactivado</value>
  </data>
  <data name="fsiDidAHashrWithStaleWarning" xml:space="preserve">
    <value>--&gt; Se hace referencia a '{0}' (ya se ha hecho referencia a un ensamblado con una marca de tiempo distinta desde esta ubicación, restablecer fsi para cargar el ensamblado actualizado)</value>
  </data>
  <data name="fsiLanguage" xml:space="preserve">
    <value>- LENGUAJE -</value>
  </data>
  <data name="fsiMiscellaneous" xml:space="preserve">
    <value>- VARIOS -</value>
  </data>
  <data name="fsiConsoleProblem" xml:space="preserve">
    <value>Se produjo un problema al iniciar el proceso de F# interactivo. Esto puede deberse a un problema conocido de compatibilidad de la consola de procesos en segundo plano con aplicaciones habilitadas para Unicode en algunos sistemas Windows. Pruebe lo siguiente: seleccione Herramientas-&gt;Opciones-&gt;F# interactivo para Visual Studio y escriba '--fsi-server-no-unicode'.</value>
  </data>
  <data name="fsiIntroTextHashhelpInfo" xml:space="preserve">
    <value>Mostrar ayuda</value>
  </data>
  <data name="fsiTurnedTimingOn" xml:space="preserve">
    <value>--&gt; Control de tiempo activado</value>
  </data>
  <data name="fsiIntroTextHeader3" xml:space="preserve">
    <value>      Vea '{0}' para conocer las opciones</value>
  </data>
  <data name="fsiExceptionRaisedStartingServer" xml:space="preserve">
    <value>Se generó una excepción al iniciar el servidor remoto.\n{0}</value>
  </data>
  <data name="fsiInvalidDirective" xml:space="preserve">
    <value>Directiva '#{0} {1}' no válida.</value>
  </data>
  <data name="fsiProductName" xml:space="preserve">
    <value>Microsoft (R) F# interactivo, versión {0}</value>
  </data>
  <data name="fsiBindingSessionTo" xml:space="preserve">
    <value>Enlazando sesión con '{0}'...</value>
  </data>
  <data name="fsiCodeGeneration" xml:space="preserve">
    <value>- GENERACIÓN DE CÓDIGO -</value>
  </data>
  <data name="fsiTimeInfoGCGenerationLabelSomeShorthandForTheWordGeneration" xml:space="preserve">
    <value>gen</value>
  </data>
  <data name="fsiDirectoryDoesNotExist" xml:space="preserve">
    <value>El directorio '{0}' no existe.</value>
  </data>
  <data name="fsiCouldNotInstallCtrlCHandler" xml:space="preserve">
    <value>No se pudo instalar el controlador ctrl-c. No estará disponible, por tanto, el control mediante Ctrl-C. El error es:\n\t{0}</value>
  </data>
  <data name="fsiLineTooLong" xml:space="preserve">
    <value>Advertencia: línea demasiado larga, omitiendo algunos caracteres.\n</value>
  </data>
  <data name="fsiUse" xml:space="preserve">
    <value>Usar el archivo proporcionado al inicio como entrada inicial</value>
  </data>
  <data name="fsiGui" xml:space="preserve">
    <value>Ejecutar interacciones en un bucle de evento de Windows Forms (activado de forma predeterminada)</value>
  </data>
  <data name="shadowCopyReferences" xml:space="preserve">
    <value>Impide que el proceso de F# interactivo bloquee las referencias</value>
  </data>
  <data name="fsiBanner3" xml:space="preserve">
    <value>Para obtener ayuda, escriba #help;;</value>
  </data>
  <data name="fsiInputFiles" xml:space="preserve">
    <value>- ARCHIVOS DE ENTRADA -</value>
  </data>
  <data name="fsiHelp" xml:space="preserve">
    <value>Muestra este mensaje de uso (forma corta: -?)</value>
  </data>
  <data name="fsiLoad" xml:space="preserve">
    <value>#load Cargar el archivo proporcionado al inicio</value>
  </data>
  <data name="fsiExec" xml:space="preserve">
    <value>Salir de fsi después de cargar los archivos o ejecutar el script .fsx proporcionado en la línea de comandos</value>
  </data>
  <data name="fsiExit" xml:space="preserve">
    <value>\n- Salir...\n</value>
  </data>
  <data name="fsiErrorsAndWarnings" xml:space="preserve">
    <value>- ERRORES Y ADVERTENCIAS -</value>
  </data>
  <data name="fsiQuiet" xml:space="preserve">
    <value>Suprimir escritura fsi en stdout</value>
  </data>
  <data name="fsiUsage" xml:space="preserve">
    <value>Uso: {0} &lt;opciones&gt; [script.fsx [&lt;argumentos&gt;]]</value>
  </data>
</root>