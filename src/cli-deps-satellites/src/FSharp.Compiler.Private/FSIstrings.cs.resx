<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="fsiUnexpectedThreadAbortException" xml:space="preserve">
    <value>- Při zpracování události se vyvolala neočekávaná výjimka ThreadAbortException (Ctrl-C): Pokus o restartování...</value>
  </data>
  <data name="fsiProductNameCommunity" xml:space="preserve">
    <value>F# Interactive pro F# {0}</value>
  </data>
  <data name="fsiDidAHashrWithLockWarning" xml:space="preserve">
    <value>--&gt; Odkazovaný soubor {0} (Soubor musí být procesem F# Interactive uzamčený.)</value>
  </data>
  <data name="fsiTimeInfoMainString" xml:space="preserve">
    <value>Real: {0}, CPU: {1}, GC {2}</value>
  </data>
  <data name="fsiReadline" xml:space="preserve">
    <value>Podpora dokončování pomocí tabulátorů v konzole (ve výchozím nastavení zapnuté)</value>
  </data>
  <data name="fsiIntroTextHashloadInfo" xml:space="preserve">
    <value>Načíst zadané soubory, jako by byly zkompilované a odkazované</value>
  </data>
  <data name="fsiFailedToResolveAssembly" xml:space="preserve">
    <value>Nepovedlo se přeložit sestavení {0}.</value>
  </data>
  <data name="fsiIntroTextHeader2commandLine" xml:space="preserve">
    <value>  Možnosti příkazového řádku F# Interactive:</value>
  </data>
  <data name="fsiIntroTextHashquitInfo" xml:space="preserve">
    <value>Ukončit</value>
  </data>
  <data name="fsiRemaining" xml:space="preserve">
    <value>Zpracovat zbývající argumenty jako argumenty příkazového řádku, ke kterým se přistupuje pomocí fsi.CommandLineArgs</value>
  </data>
  <data name="fsiEmitDebugInfoInQuotations" xml:space="preserve">
    <value>Generovat ladicí informace v uvozovkách</value>
  </data>
  <data name="fsiAbortingMainThread" xml:space="preserve">
    <value>- Přerušuje se hlavní vlákno...</value>
  </data>
  <data name="fsiAdvanced" xml:space="preserve">
    <value>- UPŘESNIT -</value>
  </data>
  <data name="fsiIntroTextHashrInfo" xml:space="preserve">
    <value>Odkazovat (dynamicky načíst) zadanou knihovnu DLL</value>
  </data>
  <data name="fsiDidAHashI" xml:space="preserve">
    <value>--&gt; Soubory přidané do knihovny ({0}) zahrnují cestu.</value>
  </data>
  <data name="fsiDidAHashr" xml:space="preserve">
    <value>--&gt; Odkazovaný soubor {0}</value>
  </data>
  <data name="fsiIntroTextHashtimeInfo" xml:space="preserve">
    <value>Přepnout časování do polohy zapnuto nebo vypnuto</value>
  </data>
  <data name="fsiIntroTextHashIInfo" xml:space="preserve">
    <value>Přidat zadanou cestu hledání pro odkazované knihovny DLL</value>
  </data>
  <data name="fsiIntroTextHeader1directives" xml:space="preserve">
    <value>  Direktivy F# Interactive:</value>
  </data>
  <data name="fsiLoadingFilesPrefixText" xml:space="preserve">
    <value>Načítání</value>
  </data>
  <data name="stoppedDueToError" xml:space="preserve">
    <value>Zastavilo se kvůli chybě.\n</value>
  </data>
  <data name="fsiInterrupt" xml:space="preserve">
    <value>\n- Přerušit\n</value>
  </data>
  <data name="fsiInvalidAssembly" xml:space="preserve">
    <value>{0} není platný název sestavení.</value>
  </data>
  <data name="fsiExceptionDuringPrettyPrinting" xml:space="preserve">
    <value>\n\nFunkce Pretty Printing vyvolala výjimku.\nNahlaste prosím tento problém, abychom ho mohli opravit.\nTrasování: {0}\n</value>
  </data>
  <data name="fsiTurnedTimingOff" xml:space="preserve">
    <value>--&gt; Časování je teď vypnuté.</value>
  </data>
  <data name="fsiDidAHashrWithStaleWarning" xml:space="preserve">
    <value>--&gt; Odkazováno {0} (na sestavení s odlišným časovým razítkem se už z tohoto umístění odkazovalo, pro načtení aktualizovaného sestavení obnovte soubor fsi)</value>
  </data>
  <data name="fsiLanguage" xml:space="preserve">
    <value>- JAZYK -</value>
  </data>
  <data name="fsiMiscellaneous" xml:space="preserve">
    <value>- RŮZNÉ -</value>
  </data>
  <data name="fsiConsoleProblem" xml:space="preserve">
    <value>Při spuštění procesu F# Interactive se vyskytl problém. Ten mohly způsobit známé potíže s podporou konzoly procesu na pozadí pro aplikace umožňující kódování Unicode v některých systémech Windows. V případě Visual Studia zkuste vybrat Nástroje-&gt;Možnosti-&gt;F# Interactive a zadat: --fsi-server-no-unicode.</value>
  </data>
  <data name="fsiIntroTextHashhelpInfo" xml:space="preserve">
    <value>Zobrazí nápovědu.</value>
  </data>
  <data name="fsiTurnedTimingOn" xml:space="preserve">
    <value>--&gt; Časování je teď zapnuté.</value>
  </data>
  <data name="fsiIntroTextHeader3" xml:space="preserve">
    <value>      Možnosti viz {0}</value>
  </data>
  <data name="fsiExceptionRaisedStartingServer" xml:space="preserve">
    <value>Při spouštění serveru vzdálené komunikace se vyvolala výjimka.\n{0}</value>
  </data>
  <data name="fsiInvalidDirective" xml:space="preserve">
    <value>Neplatná direktiva #{0} {1}</value>
  </data>
  <data name="fsiProductName" xml:space="preserve">
    <value>Microsoft (R) F# Interactive verze {0}</value>
  </data>
  <data name="fsiBindingSessionTo" xml:space="preserve">
    <value>Relace se váže na {0}...</value>
  </data>
  <data name="fsiCodeGeneration" xml:space="preserve">
    <value>- GENEROVÁNÍ KÓDU -</value>
  </data>
  <data name="fsiTimeInfoGCGenerationLabelSomeShorthandForTheWordGeneration" xml:space="preserve">
    <value>obec</value>
  </data>
  <data name="fsiDirectoryDoesNotExist" xml:space="preserve">
    <value>Adresář {0} neexistuje.</value>
  </data>
  <data name="fsiCouldNotInstallCtrlCHandler" xml:space="preserve">
    <value>Nepovedlo se nainstalovat obslužnou rutinu ctrl-c. Obslužná rutina Ctrl-C nebude dostupná. Vyskytla se tato chyba:\n\t{0}</value>
  </data>
  <data name="fsiLineTooLong" xml:space="preserve">
    <value>Upozornění: řádek je příliš dlouhý, některé znaky se ignorují.\n</value>
  </data>
  <data name="fsiUse" xml:space="preserve">
    <value>Použít při spuštění zadaný soubor jako počáteční vstup</value>
  </data>
  <data name="fsiGui" xml:space="preserve">
    <value>Provést interakce u smyčky událostí modelu Windows Forms (ve výchozím nastavení zapnuté)</value>
  </data>
  <data name="shadowCopyReferences" xml:space="preserve">
    <value>Znemožňuje zamknutí referencí interaktivním procesem jazyka F#.</value>
  </data>
  <data name="fsiBanner3" xml:space="preserve">
    <value>Nápovědu zobrazíte zadáním #help;;</value>
  </data>
  <data name="fsiInputFiles" xml:space="preserve">
    <value>- VSTUPNÍ SOUBORY -</value>
  </data>
  <data name="fsiHelp" xml:space="preserve">
    <value>Zobrazí tuto zprávu o použití (krátký tvar: -?).</value>
  </data>
  <data name="fsiLoad" xml:space="preserve">
    <value>#load zadaného souboru při spuštění</value>
  </data>
  <data name="fsiExec" xml:space="preserve">
    <value>Ukončit soubor fsi po načtení souborů nebo spuštění skriptu .fsx zadaného na příkazovém řádku</value>
  </data>
  <data name="fsiExit" xml:space="preserve">
    <value>\n- Ukončit...\n</value>
  </data>
  <data name="fsiErrorsAndWarnings" xml:space="preserve">
    <value>- CHYBY A UPOZORNĚNÍ -</value>
  </data>
  <data name="fsiQuiet" xml:space="preserve">
    <value>Potlačit zapisování fsi do stdout</value>
  </data>
  <data name="fsiUsage" xml:space="preserve">
    <value>Použití: {0} &lt;možnosti&gt; [script.fsx [&lt;argumenty&gt;]]</value>
  </data>
</root>