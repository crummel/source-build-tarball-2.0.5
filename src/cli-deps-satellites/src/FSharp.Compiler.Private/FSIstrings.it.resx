<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="fsiUnexpectedThreadAbortException" xml:space="preserve">
    <value>- Eccezione ThreadAbortException (Ctrl-C) imprevista durante la gestione dell'evento. Verrà effettuato un tentativo di riavvio...</value>
  </data>
  <data name="fsiProductNameCommunity" xml:space="preserve">
    <value>F# Interactive per F# {0}</value>
  </data>
  <data name="fsiDidAHashrWithLockWarning" xml:space="preserve">
    <value>--&gt; Riferimento a '{0}' (il file potrebbe essere bloccato dal processo di F# Interactive)</value>
  </data>
  <data name="fsiTimeInfoMainString" xml:space="preserve">
    <value>Reale: {0}, CPU: {1}, GC {2}</value>
  </data>
  <data name="fsiReadline" xml:space="preserve">
    <value>Supporta completamento con tasto TAB in console (abilitata per impostazione predefinita)</value>
  </data>
  <data name="fsiIntroTextHashloadInfo" xml:space="preserve">
    <value>Carica il file (o i file) specificati come se compilati ed aggiunti come riferimento</value>
  </data>
  <data name="fsiFailedToResolveAssembly" xml:space="preserve">
    <value>Non è stato possibile risolvere l'assembly '{0}'</value>
  </data>
  <data name="fsiIntroTextHeader2commandLine" xml:space="preserve">
    <value>  Opzioni della riga di comando F# Interactive:</value>
  </data>
  <data name="fsiIntroTextHashquitInfo" xml:space="preserve">
    <value>Esci</value>
  </data>
  <data name="fsiRemaining" xml:space="preserve">
    <value>Tratta gli argomenti rimanenti come argomenti della riga di comando accessibili mediante fsi.CommandLineArgs</value>
  </data>
  <data name="fsiEmitDebugInfoInQuotations" xml:space="preserve">
    <value>Crea informazioni di debug in quotation</value>
  </data>
  <data name="fsiAbortingMainThread" xml:space="preserve">
    <value>- Interruzione del thread principale...</value>
  </data>
  <data name="fsiAdvanced" xml:space="preserve">
    <value>- AVANZATE -</value>
  </data>
  <data name="fsiIntroTextHashrInfo" xml:space="preserve">
    <value>Aggiunge riferimento alla DLL specificata (caricamento dinamico)</value>
  </data>
  <data name="fsiDidAHashI" xml:space="preserve">
    <value>--&gt; Aggiunto '{0}' al percorso di inclusione della libreria</value>
  </data>
  <data name="fsiDidAHashr" xml:space="preserve">
    <value>--&gt; Riferimento a '{0}'</value>
  </data>
  <data name="fsiIntroTextHashtimeInfo" xml:space="preserve">
    <value>Attiva/disattiva la temporizzazione</value>
  </data>
  <data name="fsiIntroTextHashIInfo" xml:space="preserve">
    <value>Aggiunge il percorso di ricerca specificato per le DLL a cui viene fatto riferimento</value>
  </data>
  <data name="fsiIntroTextHeader1directives" xml:space="preserve">
    <value>  Direttive F# Interactive:</value>
  </data>
  <data name="fsiLoadingFilesPrefixText" xml:space="preserve">
    <value>Caricamento</value>
  </data>
  <data name="stoppedDueToError" xml:space="preserve">
    <value>Interruzione a causa di un errore\n</value>
  </data>
  <data name="fsiInterrupt" xml:space="preserve">
    <value>\n- Interrupt\n</value>
  </data>
  <data name="fsiInvalidAssembly" xml:space="preserve">
    <value>'{0}' non è un nome di assembly valido</value>
  </data>
  <data name="fsiExceptionDuringPrettyPrinting" xml:space="preserve">
    <value>\n\nEccezione durante la stampa.\nSegnalare il problema affinché possa essere risolto.\nTraccia: {0}\n</value>
  </data>
  <data name="fsiTurnedTimingOff" xml:space="preserve">
    <value>--&gt; Temporizzazione disattivata</value>
  </data>
  <data name="fsiDidAHashrWithStaleWarning" xml:space="preserve">
    <value>--&gt; Riferimento già presente a '{0}' (un assembly con timestamp diverso è già presente come riferimento in questa posizione. Reimpostare fsi per caricare l'assembly aggiornato)</value>
  </data>
  <data name="fsiLanguage" xml:space="preserve">
    <value>- LINGUAGGIO -</value>
  </data>
  <data name="fsiMiscellaneous" xml:space="preserve">
    <value>- VARIE -</value>
  </data>
  <data name="fsiConsoleProblem" xml:space="preserve">
    <value>Si è verificato un problema durante l'avvio del processo F# Interactive. Può trattarsi di un problema noto del supporto della console dei processi in background per le applicazioni abilitate per Unicode in alcuni sistemi Windows. Provare a scegliere Strumenti-&gt;Opzioni-&gt;F# Interactive per Visual Studio e immettere '--fsi-server-no-unicode'.</value>
  </data>
  <data name="fsiIntroTextHashhelpInfo" xml:space="preserve">
    <value>Visualizza la guida</value>
  </data>
  <data name="fsiTurnedTimingOn" xml:space="preserve">
    <value>--&gt; Temporizzazione attivata</value>
  </data>
  <data name="fsiIntroTextHeader3" xml:space="preserve">
    <value>      Vedere '{0}' per le opzioni</value>
  </data>
  <data name="fsiExceptionRaisedStartingServer" xml:space="preserve">
    <value>Eccezione all'avvio del server remoto.\n{0}</value>
  </data>
  <data name="fsiInvalidDirective" xml:space="preserve">
    <value>Direttiva non valida '#{0} {1}'</value>
  </data>
  <data name="fsiProductName" xml:space="preserve">
    <value>Microsoft (R) F# Interactive versione {0}</value>
  </data>
  <data name="fsiBindingSessionTo" xml:space="preserve">
    <value>Binding della sessione a '{0}'...</value>
  </data>
  <data name="fsiCodeGeneration" xml:space="preserve">
    <value>- GENERAZIONE CODICE -</value>
  </data>
  <data name="fsiTimeInfoGCGenerationLabelSomeShorthandForTheWordGeneration" xml:space="preserve">
    <value>gen</value>
  </data>
  <data name="fsiDirectoryDoesNotExist" xml:space="preserve">
    <value>La directory '{0}' non esiste</value>
  </data>
  <data name="fsiCouldNotInstallCtrlCHandler" xml:space="preserve">
    <value>Non è stato possibile installare il gestore di CTRL+C. La gestione di CTRL+C non sarà disponibile. Errore:\n\t{0}</value>
  </data>
  <data name="fsiLineTooLong" xml:space="preserve">
    <value>Avviso: riga troppo lunga; alcuni caratteri verranno ignorati\n</value>
  </data>
  <data name="fsiUse" xml:space="preserve">
    <value>Usa il file specificato all'avvio come input iniziale</value>
  </data>
  <data name="fsiGui" xml:space="preserve">
    <value>Esegue interazioni in un ciclo di eventi di Windows Forms (abilitata per impostazione predefinita)</value>
  </data>
  <data name="shadowCopyReferences" xml:space="preserve">
    <value>Impedisce che i riferimenti vengano bloccati dal processo F# Interactive</value>
  </data>
  <data name="fsiBanner3" xml:space="preserve">
    <value>Per informazioni, digitare #help;;</value>
  </data>
  <data name="fsiInputFiles" xml:space="preserve">
    <value>- FILE DI INPUT -</value>
  </data>
  <data name="fsiHelp" xml:space="preserve">
    <value>Visualizza questo messaggio relativo all'uso (forma breve: -?)</value>
  </data>
  <data name="fsiLoad" xml:space="preserve">
    <value>#load file specificato all'avvio</value>
  </data>
  <data name="fsiExec" xml:space="preserve">
    <value>Uscita da fsi dopo il caricamento dei file o l'esecuzione dello script .fsx specificato nella riga di comando</value>
  </data>
  <data name="fsiExit" xml:space="preserve">
    <value>\n- Esci...\n</value>
  </data>
  <data name="fsiErrorsAndWarnings" xml:space="preserve">
    <value>- ERRORI E AVVISI -</value>
  </data>
  <data name="fsiQuiet" xml:space="preserve">
    <value>Impedisci scrittura fsi su stdout</value>
  </data>
  <data name="fsiUsage" xml:space="preserve">
    <value>Sintassi: {0} &lt;opzioni&gt; [script.fsx [&lt;argomenti&gt;]]</value>
  </data>
</root>