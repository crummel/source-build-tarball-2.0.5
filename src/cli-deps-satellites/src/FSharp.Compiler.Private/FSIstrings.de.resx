<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="fsiUnexpectedThreadAbortException" xml:space="preserve">
    <value>- Unerwartete ThreadAbortException (Ctrl-C) während der Ereignisbehandlung: Es wird versucht, neu zu starten...</value>
  </data>
  <data name="fsiProductNameCommunity" xml:space="preserve">
    <value>F# Interactive für F# {0}</value>
  </data>
  <data name="fsiDidAHashrWithLockWarning" xml:space="preserve">
    <value>--&gt; Auf "{0}" wurde verwiesen (die Datei wird möglicherweise vom F# Interactive-Prozess gesperrt)</value>
  </data>
  <data name="fsiTimeInfoMainString" xml:space="preserve">
    <value>Real: {0}, CPU: {1}, GC {2}</value>
  </data>
  <data name="fsiReadline" xml:space="preserve">
    <value>Vervollständigung mit der TAB-TASTE in der Konsole unterstützen (standardmäßig aktiviert)</value>
  </data>
  <data name="fsiIntroTextHashloadInfo" xml:space="preserve">
    <value>Angegebene Datei(en) laden, als wären sie kompiliert und würden Verweise aufweisen</value>
  </data>
  <data name="fsiFailedToResolveAssembly" xml:space="preserve">
    <value>Fehler beim Auflösen der Assembly "{0}"</value>
  </data>
  <data name="fsiIntroTextHeader2commandLine" xml:space="preserve">
    <value>  F# Interactive-Befehlszeilenoptionen:</value>
  </data>
  <data name="fsiIntroTextHashquitInfo" xml:space="preserve">
    <value>Beenden</value>
  </data>
  <data name="fsiRemaining" xml:space="preserve">
    <value>Verbleibende Argumente als Befehlszeilenargumente (Zugriff mithilfe von fsi.CommandLineArgs) behandeln</value>
  </data>
  <data name="fsiEmitDebugInfoInQuotations" xml:space="preserve">
    <value>Debugginginformationen in Anführungszeichen ausgeben</value>
  </data>
  <data name="fsiAbortingMainThread" xml:space="preserve">
    <value>- Der Hauptthread wird abgebrochen...</value>
  </data>
  <data name="fsiAdvanced" xml:space="preserve">
    <value>- ERWEITERT -</value>
  </data>
  <data name="fsiIntroTextHashrInfo" xml:space="preserve">
    <value>Auf die angegebene DLL verweisen (dynamisch laden)</value>
  </data>
  <data name="fsiDidAHashI" xml:space="preserve">
    <value>--&gt; "{0}" wurde zum Bibliotheksincludepfad hinzugefügt</value>
  </data>
  <data name="fsiDidAHashr" xml:space="preserve">
    <value>--&gt; Auf "{0}" wurde verwiesen</value>
  </data>
  <data name="fsiIntroTextHashtimeInfo" xml:space="preserve">
    <value>Zeitliche Steuerung ein/aus</value>
  </data>
  <data name="fsiIntroTextHashIInfo" xml:space="preserve">
    <value>Angegebenen Suchpfad für DLLs, auf die verwiesen wird, hinzufügen</value>
  </data>
  <data name="fsiIntroTextHeader1directives" xml:space="preserve">
    <value>  F# Interactive-Direktiven:</value>
  </data>
  <data name="fsiLoadingFilesPrefixText" xml:space="preserve">
    <value>Laden</value>
  </data>
  <data name="stoppedDueToError" xml:space="preserve">
    <value>Aufgrund eines Fehlers beendet\n</value>
  </data>
  <data name="fsiInterrupt" xml:space="preserve">
    <value>\n- Unterbrechen\n</value>
  </data>
  <data name="fsiInvalidAssembly" xml:space="preserve">
    <value>"{0}" ist kein gültiger Assemblyname.</value>
  </data>
  <data name="fsiExceptionDuringPrettyPrinting" xml:space="preserve">
    <value>\n\nAusnahme beim Schöndruck.\nMelden Sie dies, damit das Problem behoben werden kann.\nAblaufverfolgung: {0}\n</value>
  </data>
  <data name="fsiTurnedTimingOff" xml:space="preserve">
    <value>--&gt; Zeitliche Steuerung jetzt aus</value>
  </data>
  <data name="fsiDidAHashrWithStaleWarning" xml:space="preserve">
    <value>--&gt; Auf "{0}" wurde verwiesen (eine Assembly mit einem anderen Zeitstempel wurde bereits von diesem Ort verwiesen; stellen Sie fsi wieder her, um die aktualisierte Assembly zu laden)</value>
  </data>
  <data name="fsiLanguage" xml:space="preserve">
    <value>- SPRACHE -</value>
  </data>
  <data name="fsiMiscellaneous" xml:space="preserve">
    <value>- VERSCHIEDENES -</value>
  </data>
  <data name="fsiConsoleProblem" xml:space="preserve">
    <value>Beim Starten des F# Interactive-Prozesses ist ein Fehler aufgetreten. Ursache hierfür kann ein bekanntes Problem mit der Hintergrundprozess-Konsolenunterstützung für Unicode-aktivierte Anwendungen unter manchen Windows-Systemen sein. Wählen Sie "Tools" -&gt; "Optionen" -&gt; "F# Interactive für Visual Studio" aus, und geben Sie "--fsi-server-no-unicode" ein.</value>
  </data>
  <data name="fsiIntroTextHashhelpInfo" xml:space="preserve">
    <value>Hilfe anzeigen</value>
  </data>
  <data name="fsiTurnedTimingOn" xml:space="preserve">
    <value>--&gt; Zeitliche Steuerung jetzt ein</value>
  </data>
  <data name="fsiIntroTextHeader3" xml:space="preserve">
    <value>      Optionen finden Sie unter "{0}".</value>
  </data>
  <data name="fsiExceptionRaisedStartingServer" xml:space="preserve">
    <value>Ausnahme beim Starten des Remoteservers.\n{0}</value>
  </data>
  <data name="fsiInvalidDirective" xml:space="preserve">
    <value>Ungültige Direktive "#{0} {1}"</value>
  </data>
  <data name="fsiProductName" xml:space="preserve">
    <value>Microsoft (R) F# Interactive, Version {0}</value>
  </data>
  <data name="fsiBindingSessionTo" xml:space="preserve">
    <value>Sitzung wird an "{0}" gebunden...</value>
  </data>
  <data name="fsiCodeGeneration" xml:space="preserve">
    <value>- CODEGENERIERUNG -</value>
  </data>
  <data name="fsiTimeInfoGCGenerationLabelSomeShorthandForTheWordGeneration" xml:space="preserve">
    <value>Gen</value>
  </data>
  <data name="fsiDirectoryDoesNotExist" xml:space="preserve">
    <value>Das Verzeichnis "{0}" ist nicht vorhanden.</value>
  </data>
  <data name="fsiCouldNotInstallCtrlCHandler" xml:space="preserve">
    <value>Fehler beim Installieren des STRG-C-Handlers. STRG-C-Behandlung ist nicht verfügbar. Fehler:\n\t{0}</value>
  </data>
  <data name="fsiLineTooLong" xml:space="preserve">
    <value>Warnung: Die Zeile ist zu lang, einige Zeichen werden ignoriert.\n</value>
  </data>
  <data name="fsiUse" xml:space="preserve">
    <value>Die angegebene Datei beim Start als ursprüngliche Eingabe verwenden</value>
  </data>
  <data name="fsiGui" xml:space="preserve">
    <value>Interaktionen in einer Windows Forms-Ereignisschleife ausführen (standardmäßig aktiviert)</value>
  </data>
  <data name="shadowCopyReferences" xml:space="preserve">
    <value>Verhindert, dass Verweise vom interaktiven Prozess F# gesperrt werden</value>
  </data>
  <data name="fsiBanner3" xml:space="preserve">
    <value>Um Hilfe zu erhalten, geben Sie "#help;;" ein.</value>
  </data>
  <data name="fsiInputFiles" xml:space="preserve">
    <value>- EINGABEDATEIEN -</value>
  </data>
  <data name="fsiHelp" xml:space="preserve">
    <value>Diesen Hilfetext anzeigen (Kurzform: -?)</value>
  </data>
  <data name="fsiLoad" xml:space="preserve">
    <value>#load der angegebenen Datei beim Start</value>
  </data>
  <data name="fsiExec" xml:space="preserve">
    <value>FSI nach Laden der Dateien oder Ausführen des in der Befehlszeile angegebenen .fsx-Skripts beenden</value>
  </data>
  <data name="fsiExit" xml:space="preserve">
    <value>\n- Beenden...\n</value>
  </data>
  <data name="fsiErrorsAndWarnings" xml:space="preserve">
    <value>- FEHLER UND WARNUNGEN -</value>
  </data>
  <data name="fsiQuiet" xml:space="preserve">
    <value>Schreiben von FSI in stdout unterdrücken</value>
  </data>
  <data name="fsiUsage" xml:space="preserve">
    <value>Verwendung: {0} &lt;Optionen&gt; [script.fsx [&lt;Argumente&gt;]]</value>
  </data>
</root>