<Project>
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <IsFSharp>$(MSBuildProjectName.Contains('FSharp'))</IsFSharp>
    <IsPackage>$(MSbuildProjectName.Contains('CliDeps'))</IsPackage>

    <!-- Output paths -->
    <RepoRootPath>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)..'))\</RepoRootPath>
    <RootOutputPath>$(RepoRootPath)bin\</RootOutputPath>
    <ConfigurationRootOutputPath>$(RootOutputPath)$(Configuration)\</ConfigurationRootOutputPath>
    <RootIntermediateOutputPath>$(RootOutputPath)Intermediate\</RootIntermediateOutputPath>
    <BaseIntermediateOutputPath>$(RootIntermediateOutputPath)$(MSBuildProjectName)\</BaseIntermediateOutputPath>
    <OutputPath>$(ConfigurationRootOutputPath)Roslyn\</OutputPath>
    <OutputPath Condition="$(IsFSharp)">$(ConfigurationRootOutputPath)FSharp\</OutputPath>
    <PackageOutputPath>$(ConfigurationRootOutputPath)</PackageOutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>

    <!-- Don't reference entire framework, we just need System.Runtime for satellites -->
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>

    <!-- Suppress all build output but satellites -->
    <GenerateDependencyFile>false</GenerateDependencyFile>
    <CopyBuildOutputToOutputDirectory>false</CopyBuildOutputToOutputDirectory>
    <CopyOutputSymbolsToOutputDirectory>false</CopyOutputSymbolsToOutputDirectory>

    <!-- Setup nuget pack -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <GeneratePackageOnBuild>$(IsPackage)</GeneratePackageOnBuild>

    <!-- Set up signing -->
    <StrongNameKey>MSSharedLib</StrongNameKey>
    <StrongNameKey Condition="$(IsFSharp)">MSFT</StrongNameKey>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)..\build\$(StrongNameKey).snk</AssemblyOriginatorKeyFile>
    <SignToolConfig>$(MSBuildThisFileDirectory)..\build\$(StrongNameKey).json</SignToolConfig>
    <SignAssembly>true</SignAssembly>
    
    <!-- Use delay signing instead of public signing on full msbuild to workaround https://github.com/Microsoft/msbuild/issues/1490 -->
    <PublicSign Condition="'$(SignType)' != 'real' and '$(MSBuildRuntimeType)' == 'Core'">true</PublicSign>
    <DelaySign Condition="'$(PublicSign)' != 'true'">true</DelaySign>

    <!-- Set up assembly and package metadata -->
    <Authors>Microsoft Corporation</Authors>
    <Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
    <BuildEpoch>20170101</BuildEpoch>
    <VersionPrefix>2.3.0</VersionPrefix>
    <VersionPrefix Condition="$(IsFSharp)">4.4.1</VersionPrefix>
    <BuildNumber Condition="'$(BuildNumber)' == ''">$(BUILD_BUILDNUMBER)</BuildNumber>
    <BuildNumber Condition="'$(BuildNumber)' == ''">99999999-99</BuildNumber>
    <BuildNumberPart1>$(BuildNumber.Split('-')[0])</BuildNumberPart1>
    <BuildNumberPart2>$(BuildNumber.Split('-')[1].PadLeft(2,'0'))</BuildNumberPart2>
    <Version Condition="'$(Version)' == ''">$(VersionPrefix)-pre-$(BuildNumber)</Version>
    <AssemblyVersion>$(VersionPrefix).0</AssemblyVersion>
    <FileVersion Condition="'$(BUILD_BUILDNUMBER)' == ''">$(VersionPrefix).0</FileVersion>
    <FileVersion Condition="'$(BUILD_BUILDNUMBER)' != ''">$(VersionPrefix).$([MSBuild]::Subtract($(BuildNumberPart1), $(BuildEpoch)))</FileVersion>
    <InformationalVersion>$(VersionPrefix).$(BuildNumber)</InformationalVersion>
    <InformationalVersion Condition="'$(BUILD_SOURCEVERSION)' != ''">$(InformationalVersion). Commit Hash: $(BUILD_SOURCEVERSION)</InformationalVersion>
    
    <!-- Dependency versions -->
    <SystemRuntimeVersion>4.1.0</SystemRuntimeVersion>
    <SignToolVersion>0.3.3-beta</SignToolVersion>
    <MicroBuildVersion>0.2.0</MicroBuildVersion>
  </PropertyGroup>

  <!-- Dependencies -->  
  <ItemGroup>
    <PackageReference Include="System.Runtime" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="MicroBuild.Core" Version="$(MicroBuildVersion)" Condition="$(IsPackage)" />
    <PackageReference Include="RoslynTools.Microsoft.SignTool" Version="$(SignToolVersion)" Condition="$(IsPackage)" />
  </ItemGroup>

  <!-- 
    Default metadata on Project and package refenences:    
      PrivateAssets=All: hide all depdencies from .nuspec.
      ReferenceOutputAssembly=false: we only have have P2P references for build sequencing.
  -->
  <ItemDefinitionGroup>
    <PackageReference>
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>

    <ProjectReference>
      <PrivateAssets>All</PrivateAssets>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemDefinitionGroup>

</Project>