<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Vbc_RenamePDB" xml:space="preserve">
    <value>MSB3402: Wystąpił błąd podczas tworzenia pliku pdb „{0}”. {1}</value>
  </data>
  <data name="General_IncorrectHostObject" xml:space="preserve">
    <value>MSB3087: Do zadania „{0}” przekazano niezgodny obiekt hosta. Obiekt hosta tego zadania musi implementować interfejs „{1}”.</value>
  </data>
  <data name="General_DuplicateItemsNotSupported" xml:space="preserve">
    <value>MSB3105: Element „{0}” został określony wielokrotnie w parametrze „{1}”. Zduplikowane elementy nie są obsługiwane przez parametr „{1}”.</value>
  </data>
  <data name="Csc_AssemblyAliasContainsIllegalCharacters" xml:space="preserve">
    <value>MSB3053: Alias zestawu „{1}” w odwołaniu „{0}” zawiera niedozwolone znaki.</value>
  </data>
  <data name="General_ExpectedFileMissing" xml:space="preserve">
    <value>Oczekiwany plik „{0}” nie istnieje.</value>
  </data>
  <data name="General_DuplicateItemsNotSupportedWithMetadata" xml:space="preserve">
    <value>MSB3083: Element „{0}” został określony więcej niż raz w parametrze „{1}” i oba elementy miały tę samą wartość „{2}” metadanych „{3}”. Zduplikowane elementy w parametrze „{1}” nie są obsługiwane, jeśli nie mają różnych wartości metadanych „{3}”.</value>
  </data>
  <data name="General_ParameterUnsupportedOnHostCompiler" xml:space="preserve">
    <value>Wewnątrzprocesowy kompilator środowiska IDE nie obsługuje określonych wartości dla parametru „{0}”. Dlatego to zadanie powróci do używania kompilatora wiersza polecenia.</value>
  </data>
  <data name="General_ToolFileNotFound" xml:space="preserve">
    <value>MSB3082: Zadanie zakończyło się niepowodzeniem, ponieważ nie można znaleźć elementu „{0}”.</value>
  </data>
  <data name="SharedCompilationFallback" xml:space="preserve">
    <value>Udostępniona kompilacja nie powiodła się; nastąpi powrót do narzędzia: {0}</value>
  </data>
  <data name="CopyRefAssembly_BadDestination1" xml:space="preserve">
    <value>Nie można sprawdzić skrótu zawartości docelowego zestawu odwołania „{0}”. Zostanie on zastąpiony.</value>
  </data>
  <data name="CopyRefAssembly_SourceNotRef1" xml:space="preserve">
    <value>Nie można wyodrębnić identyfikatora MVID z elementu „{0}”. Czy to na pewno jest zestaw odwołania?</value>
  </data>
  <data name="CopyRefAssembly_SkippingCopy1" xml:space="preserve">
    <value>Zestaw odwołania „{0}” już zawiera najnowsze informacje. Nie modyfikuj go.</value>
  </data>
  <data name="General_CouldNotSetHostObjectParameter" xml:space="preserve">
    <value>MSB3081: Wystąpił problem podczas próby ustawienia parametru „{0}” dla wewnątrzprocesowego kompilatora programu IDE. {1}</value>
  </data>
  <data name="Csc_InvalidParameter" xml:space="preserve">
    <value>MSB3051: Parametr podany w kompilatorze jest nieprawidłowy. {0}</value>
  </data>
  <data name="CopyRefAssembly_BadSource3" xml:space="preserve">
    <value>Nie można sprawdzić skrótu zawartości docelowego zestawu odwołania „{0}”: {1}
{2}</value>
  </data>
  <data name="UsingSharedCompilation" xml:space="preserve">
    <value>Używana jest udostępniona kompilacja z kompilatorem z katalogu: {0}</value>
  </data>
  <data name="Csc_InvalidParameterWarning" xml:space="preserve">
    <value>MSB3052: Parametr podany w kompilatorze jest nieprawidłowy, element „{0}{1}” zostanie zignorowany.</value>
  </data>
  <data name="General_CannotConvertStringToBool" xml:space="preserve">
    <value>Ciągu „{0}” nie można przekonwertować na wartość logiczną (true/false).</value>
  </data>
  <data name="General_InvalidAttributeMetadata" xml:space="preserve">
    <value>Element „{0}” ma atrybut „{1}” o wartości „{2}”, którego nie można przekonwertować na „{3}”.</value>
  </data>
  <data name="Vbc_ParameterHasInvalidValue" xml:space="preserve">
    <value>„{1}” jest nieprawidłową wartością parametru „{0}”.</value>
  </data>
  <data name="Compiler_UnexpectedException" xml:space="preserve">
    <value>MSB3883: Nieoczekiwany wyjątek: </value>
  </data>
  <data name="Vbc_EnumParameterHasInvalidValue" xml:space="preserve">
    <value>MSB3401: „{1}” jest nieprawidłową wartością parametru „{0}”. Prawidłowe wartości: {2}</value>
  </data>
  <data name="General_ReferenceDoesNotExist" xml:space="preserve">
    <value>MSB3104: Nie można odnaleźć przywoływanego zestawu „{0}”. Jeżeli zestaw jest tworzony przez inny projekt, upewnij się, że przed skompilowaniem tego zestawu został skompilowany ten inny projekt.</value>
  </data>
</root>