<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Vbc_RenamePDB" xml:space="preserve">
    <value>MSB3402: "{0}" pdb dosyası oluşturulurken hata oluştu. {1}</value>
  </data>
  <data name="General_IncorrectHostObject" xml:space="preserve">
    <value>MSB3087: "{0}" görevine uyumlu olmayan bir ana nesnesi geçirildi. Bu görevin ana nesnesi "{1}" arabirimini uygulamalıdır.</value>
  </data>
  <data name="General_DuplicateItemsNotSupported" xml:space="preserve">
    <value>MSB3105: "{0}" öğesi, "{1}" parametresinde bir kereden fazla belirtildi. "{1}" parametresi yinelenen öğeleri desteklemez.</value>
  </data>
  <data name="Csc_AssemblyAliasContainsIllegalCharacters" xml:space="preserve">
    <value>MSB3053: "{0}" başvurusundaki "{1}" derleme diğer adında geçersiz karakterler var.</value>
  </data>
  <data name="General_ExpectedFileMissing" xml:space="preserve">
    <value>Beklenen "{0}" dosyası yok.</value>
  </data>
  <data name="General_DuplicateItemsNotSupportedWithMetadata" xml:space="preserve">
    <value>MSB3083: "{1}" parametresinde "{0}" öğesi birden çok kez belirtildi ve her iki öğe de "{3}" meta verisi için aynı "{2}" değerini içeriyordu. "{1}" parametresi, "{3}" meta verisi için farklı değerlere sahip olmayan yinelenen öğeleri desteklemez.</value>
  </data>
  <data name="General_ParameterUnsupportedOnHostCompiler" xml:space="preserve">
    <value>IDE'nin işlem içi derleyicisi, "{0}" parametresi için belirtilen değerleri desteklemiyor. Bu nedenle, bu görev komut satırı derleyicisini kullanmak için geri dönecek.</value>
  </data>
  <data name="General_ToolFileNotFound" xml:space="preserve">
    <value>MSB3082: "{0}" bulunamadığı için görev başarısız oldu.</value>
  </data>
  <data name="SharedCompilationFallback" xml:space="preserve">
    <value>Paylaşılan derleme başarısız oldu; önceki araca dönülüyor: {0}</value>
  </data>
  <data name="CopyRefAssembly_BadDestination1" xml:space="preserve">
    <value>'{0}' hedef başvuru bütünleştirilmiş kodunun içerik karması denetlenemedi. Üzerine yazılacak.</value>
  </data>
  <data name="CopyRefAssembly_SourceNotRef1" xml:space="preserve">
    <value>"{0}" öğesinden MVID ayıklanamadı. Bunun bir başvuru bütünleştirilmiş kodu olduğundan emin misiniz?</value>
  </data>
  <data name="CopyRefAssembly_SkippingCopy1" xml:space="preserve">
    <value>"{0}" başvuru bütünleştirilmiş kodu zaten son bilgileri içeriyor. Olduğu gibi bırakılıyor.</value>
  </data>
  <data name="General_CouldNotSetHostObjectParameter" xml:space="preserve">
    <value>MSB3081: IDE'nin işlem içi derleyicisi için "{0}" parametresi ayarlanmaya çalışılırken bir sorunla karşılaşıldı. {1}</value>
  </data>
  <data name="Csc_InvalidParameter" xml:space="preserve">
    <value>MSB3051: Derleyici parametresi geçersiz. {0}</value>
  </data>
  <data name="CopyRefAssembly_BadSource3" xml:space="preserve">
    <value>'{0}' hedef başvuru bütünleştirilmiş kodunun içerik karması denetlenemedi: {1}
{2}</value>
  </data>
  <data name="UsingSharedCompilation" xml:space="preserve">
    <value>Şu dizindeki derleyici ile paylaşılan derleme kullanılıyor: {0}</value>
  </data>
  <data name="Csc_InvalidParameterWarning" xml:space="preserve">
    <value>MSB3052: Derleyici parametresi geçersiz. '{0}{1}' yoksayılacak.</value>
  </data>
  <data name="General_CannotConvertStringToBool" xml:space="preserve">
    <value>"{0}" dizesi bir boole (doğru/yanlış) değerine dönüştürülemiyor.</value>
  </data>
  <data name="General_InvalidAttributeMetadata" xml:space="preserve">
    <value>"{0}" öğesinin, "{3}" değerine dönüştürülemeyen "{2}" değerine sahip "{1}" özniteliği var.</value>
  </data>
  <data name="Vbc_ParameterHasInvalidValue" xml:space="preserve">
    <value>"{1}" değeri "{0}" parametresi için geçersiz bir değer.</value>
  </data>
  <data name="Compiler_UnexpectedException" xml:space="preserve">
    <value>MSB3883: Beklenmeyen özel durum: </value>
  </data>
  <data name="Vbc_EnumParameterHasInvalidValue" xml:space="preserve">
    <value>MSB3401: "{1}" değeri, "{0}" parametresi için geçersiz. Geçerli değerler şunlardır: {2}</value>
  </data>
  <data name="General_ReferenceDoesNotExist" xml:space="preserve">
    <value>MSB3104: Başvurulan "{0}" derlemesi bulunamadı. Bu derleme başka bir projeniz tarafından üretildiyse, lütfen bunu oluşturmadan önce ilgili projeyi oluşturduğunuzdan emin olun.</value>
  </data>
</root>