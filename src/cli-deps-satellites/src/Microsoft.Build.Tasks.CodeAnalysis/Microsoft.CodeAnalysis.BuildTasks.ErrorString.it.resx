<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Vbc_RenamePDB" xml:space="preserve">
    <value>MSB3402: si è verificato un errore durante la creazione del file PDB "{0}". {1}</value>
  </data>
  <data name="General_IncorrectHostObject" xml:space="preserve">
    <value>MSB3087: all'attività "{0}" è stato passato un oggetto host incompatibile. L'oggetto host di questa attività deve implementare l'interfaccia "{1}".</value>
  </data>
  <data name="General_DuplicateItemsNotSupported" xml:space="preserve">
    <value>MSB3105: l'elemento "{0}" è stato specificato più di una volta nel parametro "{1}", ma il parametro "{1}" non supporta gli elementi duplicati.</value>
  </data>
  <data name="Csc_AssemblyAliasContainsIllegalCharacters" xml:space="preserve">
    <value>MSB3053: l'alias dell'assembly "{1}" nel riferimento "{0}" contiene caratteri non ammessi.</value>
  </data>
  <data name="General_ExpectedFileMissing" xml:space="preserve">
    <value>Il file previsto "{0}" non esiste.</value>
  </data>
  <data name="General_DuplicateItemsNotSupportedWithMetadata" xml:space="preserve">
    <value>MSB3083: l'elemento "{0}" è stato specificato più di una volta nel parametro "{1}" ed entrambi gli elementi hanno lo stesso valore "{2}" per i metadati di "{3}". Il parametro "{1}" non supporta gli elementi duplicati a meno che non includano valori diversi per i metadati di "{3}".</value>
  </data>
  <data name="General_ParameterUnsupportedOnHostCompiler" xml:space="preserve">
    <value>Il compilatore in-process dell'IDE non supporta i valori specificati per il parametro "{0}", di conseguenza per questa attività verrà usato in sostituzione il compilatore da riga di comando.</value>
  </data>
  <data name="General_ToolFileNotFound" xml:space="preserve">
    <value>MSB3082: l'attività non è riuscita perché "{0}" non è stato trovato.</value>
  </data>
  <data name="SharedCompilationFallback" xml:space="preserve">
    <value>La compilazione condivisa non è riuscita. Verrà eseguito il fallback allo strumento: {0}</value>
  </data>
  <data name="CopyRefAssembly_BadDestination1" xml:space="preserve">
    <value>Non è stato possibile verificare l'hash del contenuto dell'assembly di riferimento di destinazione '{0}'. Verrà sovrascritto.</value>
  </data>
  <data name="CopyRefAssembly_SourceNotRef1" xml:space="preserve">
    <value>Non è stato possibile estrarre il MVID da "{0}". Si è sicuri che si tratti di un assembly di riferimento?</value>
  </data>
  <data name="CopyRefAssembly_SkippingCopy1" xml:space="preserve">
    <value>Le informazioni nell'assembly di riferimento "{0}" sono già le più recenti. Non verranno modificate.</value>
  </data>
  <data name="General_CouldNotSetHostObjectParameter" xml:space="preserve">
    <value>MSB3081: si è verificato un problema durante il tentativo di impostare il parametro "{0}" per il compilatore in-process dell'IDE. {1}</value>
  </data>
  <data name="Csc_InvalidParameter" xml:space="preserve">
    <value>MSB3051: il parametro per il compilatore non è valido. {0}</value>
  </data>
  <data name="CopyRefAssembly_BadSource3" xml:space="preserve">
    <value>Non è stato possibile verificare l'hash del contenuto dell'assembly di riferimento di origine '{0}': {1}
{2}</value>
  </data>
  <data name="UsingSharedCompilation" xml:space="preserve">
    <value>Verrà usata la compilazione condivisa con il compilatore della directory: {0}</value>
  </data>
  <data name="Csc_InvalidParameterWarning" xml:space="preserve">
    <value>MSB3052: il parametro per il compilatore non è valido. '{0}{1}' verrà ignorato.</value>
  </data>
  <data name="General_CannotConvertStringToBool" xml:space="preserve">
    <value>Non è possibile convertire la stringa "{0}" in un valore booleano (true/false).</value>
  </data>
  <data name="General_InvalidAttributeMetadata" xml:space="preserve">
    <value>L'elemento "{0}" contiene l'attributo "{1}" con valore "{2}" che non è stato possibile convertire in "{3}".</value>
  </data>
  <data name="Vbc_ParameterHasInvalidValue" xml:space="preserve">
    <value>"{1}" non è un valore valido per il parametro "{0}".</value>
  </data>
  <data name="Compiler_UnexpectedException" xml:space="preserve">
    <value>MSB3883: Eccezione imprevista: </value>
  </data>
  <data name="Vbc_EnumParameterHasInvalidValue" xml:space="preserve">
    <value>MSB3401: "{1}" è un valore non valido per il parametro "{0}". I valori validi sono: {2}</value>
  </data>
  <data name="General_ReferenceDoesNotExist" xml:space="preserve">
    <value>MSB3104: il modello "{0}" a cui si fa riferimento non è stato trovato. Se l'assembly è prodotto da un altro progetto, assicurarsi di compilare tale progetto prima di compilare quello corrente.</value>
  </data>
</root>